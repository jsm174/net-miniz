name: Nuget Native
on:
  workflow_run:
    workflows: [ "Build Native" ]
    branches: [ master ]
    types:
      - completed

jobs:
  nuget-native-win-x64:
    runs-on: windows-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.event == 'push' }}
    steps:
      - uses: actions/checkout@v2
      - uses: nuget/setup-nuget@v1
      - name: Build
        run: |
          cd build/libminiz
          cmake -G "Visual Studio 16 2019" -A x64 -B build
          cmake --build build --config Release
          nuget pack ../native/NetMiniZ.Native.win-x64.nuspec -OutputDirectory ../../nupkg
      - name: Publish
          nuget push nupkg/*.nupkg --api-key ${{ secrets.NUGET_KEY }}
      - uses: actions/upload-artifact@v2
        with: 
          name: NetMiniZ.Native.nuget
          path: nupkg/
          
  nuget-native-win-x86:
    runs-on: windows-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.event == 'push' }}
    steps:
      - uses: actions/checkout@v2
      - uses: nuget/setup-nuget@v1
      - name: Build
        run: |
          cd build/libminiz
          cmake -G "Visual Studio 16 2019" -A Win32 -B build
          cmake --build build --config Release
          nuget pack ../native/NetMiniZ.Native.win-x86.nuspec -OutputDirectory ../../nupkg
      - name: Publish
          nuget push nupkg/*.nupkg --api-key ${{ secrets.NUGET_KEY }}
      - uses: actions/upload-artifact@v2
        with: 
          name: NetMiniZ.Native.nuget
          path: nupkg/
        
  nuget-native-osx-x64:
    runs-on: macos-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.event == 'push' }}
    steps:
      - uses: actions/checkout@v2
      - uses: nuget/setup-nuget@v1
      - name: Build
        run: |
          cd build/libminiz
          cmake -B build
          cmake --build build
          nuget pack ../native/NetMiniZ.Native.osx-x64.nuspec -OutputDirectory ../../nupkg
      - name: Publish
          nuget push nupkg/*.nupkg --api-key ${{ secrets.NUGET_KEY }}
      - uses: actions/upload-artifact@v2
        with: 
          name: NetMiniZ.Native.nuget
          path: nupkg/
        
  nuget-native-linux-x64:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.event == 'push' }}
    steps:
      - uses: actions/checkout@v2
      - uses: nuget/setup-nuget@v1
      - name: Build
        run: |
          cd build/libminiz
          cmake -B build
          cmake --build build
          nuget pack ../native/NetMiniZ.Native.linux-x64.nuspec -OutputDirectory ../../nupkg
      - name: Publish
          nuget push nupkg/*.nupkg --api-key ${{ secrets.NUGET_KEY }}
      - uses: actions/upload-artifact@v2
        with:
          name: libminiz-linux-x64
          path: libminiz/build/lib/
      - uses: actions/upload-artifact@v2
        with: 
          name: NetMiniZ.Native.nuget
          path: nupkg/

  nuget-native-native:
    runs-on: windows-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.event == 'push' }}
    steps:
      - uses: actions/checkout@v2
      - uses: nuget/setup-nuget@v1
      - name: Build
        run: |
          nuget pack build/native/NetMiniZ.Native.nuspec -OutputDirectory nupkg
      - name: Publish
          nuget push nupkg/*.nupkg --api-key ${{ secrets.NUGET_KEY }}
      - uses: actions/upload-artifact@v2
        with:
          name: NetMiniZ.Native.nuget
          path: nupkg/
